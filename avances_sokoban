       
       import os
import time
import threading
class Soko:

    mapa = [] # mapa del juego
    personaje_columna = 0
    personaje_fila = 0
    textura=[]
    tiempo_jugado = 0
    pasos=0


    def __init__(self):
       self.textura = {
          0: "🐎",#personaje
          1: "📦",#caja
          2: "🏁",#meta
          3: "👻",#pared
          4: "  ",#piso
          5: "🐎",#personaje_meta
          6: "📦",#caja_meta
          
          }
       self.mapa = [
          [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
          [3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
          [3, 4, 0, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3],
          [3, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3],
          [3, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 3],
          [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
          ]
       self.personaje_columna=2
       self.personaje_fila=2

    def imprimirMapa(self):
       for filas in self.mapa:
        fila_textura=[self.textura[numero]for numero in filas]
        print(" ".join(fila_textura))
         

    def movimiento1(self):
        # Donde estaba el persona pone un piso
        self.mapa[self.personaje_fila][self.personaje_columna] = 4
        # Donde estaba el piso pone al personaje
        self.mapa[self.personaje_fila][self.personaje_columna + 1] = 0
        # Actualiza la posicion del personaje
        self.personaje_columna+=1
    def derecha(self):
        # Movimiento 1: [0,4] -> [4,0]
        if self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila][self.personaje_columna + 1] == 4:
            self.movimiento1()
        # Si hay una caja a la derecha del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila][self.personaje_columna + 1] == 1:
          # Movimiento 2: [0,1,4] -> [4,0,1]
          if self.mapa[self.personaje_fila][self.personaje_columna + 2] == 4:
            # Mueve la caja si hay espacio
            self.mapa[self.personaje_fila][self.personaje_columna + 2] = 1
            self.mapa[self.personaje_fila][self.personaje_columna + 1] = 0
            self.movimiento1()
        #si hay una meta a la derecha del personaje
          elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila][self.personaje_columna + 1] == 2:
            #movimiento 3: [0,2]->[4,5]
            if self.mapa[self.personaje_fila][self.personaje_columna] == 4:
              #mueve el personaje si hay una meta
              self.mapa[self.personaje_fila][self.personaje_columna + 1] = 5
              self.personaje_columna+=1
              self.movimiento1()





            
    def movimiento2(self): # izquierda
        self.mapa[self.personaje_fila][self.personaje_columna -1 ] = 0
                    # Donde estaba el personaje pone el piso
        self.mapa[self.personaje_fila][self.personaje_columna] = 4
                    # Actualiza la posicion del personaje
        self.personaje_columna-=1
    def izquierda(self):
        if self.mapa[self.personaje_fila][self.personaje_columna -1] == 4 and self.mapa[self.personaje_fila][self.personaje_columna] == 0:
            self.movimiento2()   
        #si hay una caja a la izquierda del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna]==0 and self.mapa[self.personaje_fila][self.personaje_columna - 1]==1:
          #movimiento caja [4,1,0] -> [1,0,4]
          if self.mapa[self.personaje_fila][self.personaje_columna-2]==4:
            #mueve la caja si hay un espacio
            self.mapa[self.personaje_fila][self.personaje_columna - 2] = 1
            self.mapa[self.personaje_fila][self.personaje_columna - 1] = 0
            self.movimiento2()


  
   # Movimiento hacia arriba
    def movimientoArriba(self):
        # Donde estaba el personaje pone un piso
        self.mapa[self.personaje_fila][self.personaje_columna] = 4
        # Donde estaba el piso pone al personaje
        self.mapa[self.personaje_fila - 1][self.personaje_columna] = 0
        # Actualiza la posicion del personaje
        self.personaje_fila -= 1
    def arriba(self):
        if self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila - 1][self.personaje_columna] == 4:
          self.movimientoArriba()
        # Si hay una caja arriba del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila - 1][self.personaje_columna] == 1:
            # Movimiento 2: [0,1,4] -> [4,0,1]
            if self.mapa[self.personaje_fila - 2][self.personaje_columna] == 4:
                # Mueve la caja si hay espacio
                self.mapa[self.personaje_fila - 2][self.personaje_columna] = 1
                self.mapa[self.personaje_fila - 1][self.personaje_columna] = 0
                self.movimientoArriba()



  
    def movimientoabajo(self):
      self.mapa[self.personaje_fila][self.personaje_columna] = 4
      # Donde estaba el piso pone al personaje
      self.mapa[self.personaje_fila + 1][self.personaje_columna] = 0
      # Actualiza la posicion del personaje
      self.personaje_fila += 1
    def abajo(self):
        if self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila + 1][
          self.personaje_columna] == 4:
          self.movimientoabajo()
        # Si hay una caja abajo del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila + 1][self.personaje_columna] == 1:
            # Movimiento 2: [0,1,4] -> [4,0,1]
            if self.mapa[self.personaje_fila + 2][self.personaje_columna] == 4:
                # Mueve la caja si hay espacio
                self.mapa[self.personaje_fila + 2][self.personaje_columna] = 1
                self.mapa[self.personaje_fila + 1][self.personaje_columna] = 0
                self.movimientoabajo()
    def abajo(self):
        if self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila + 1][
          self.personaje_columna] == 4:
          self.movimiento4()
        # Si hay una caja abajo del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila + 1][self.personaje_columna] == 1:
            # Movimiento 2: [0,1,4] -> [4,0,1]
            if self.mapa[self.personaje_fila + 2][self.personaje_columna] == 4:
                # Mueve la caja si hay espacio
                self.mapa[self.personaje_fila + 2][self.personaje_columna] = 1
                self.mapa[self.personaje_fila + 1][self.personaje_columna] = 0
                self.movimiento4()
        #Si hay una meta a la derecha del personaje
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila+1][self.personaje_columna] == 2:
          #Movimiento: [0,2] -> [4,5]
          if self.mapa[self.personaje_fila+1][self.personaje_columna] == 2:
            #mueve al personaje si hay una meta
            self.mapa[self.personaje_fila][self.personaje_columna] = 4
            self.mapa[self.personaje_fila+1][self.personaje_columna] = 5
            self.personaje_fila+=1
            self.pasos+=1
        #si hay un espacio abajo del personaje_meta
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 5 and self.mapa[self.personaje_fila+1][self.personaje_columna] == 4:
          if self.mapa[self.personaje_fila+1][self.personaje_columna] == 4:
            #mueve si hay un espacio
            self.mapa[self.personaje_fila][self.personaje_columna] = 2
            self.mapa[self.personaje_fila+1][self.personaje_columna] = 0
            self.personaje_fila+=1
            self.pasos+=1
        #si hay una meta abajo del personaje_meta
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 5 and self.mapa[self.personaje_fila+1][self.personaje_columna] == 2:
          if self.mapa[self.personaje_fila+1][self.personaje_columna] == 2:
            self.mapa[self.personaje_fila][self.personaje_columna] = 2
            self.mapa[self.personaje_fila+1][self.personaje_columna] = 5
            self.personaje_fila+=1
            self.pasos+=1
#movimiento personaje, caja_meta,meta
           #evaluamos que abajo del personaje  este una caja_meta y una meta
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 0 and self.mapa[self.personaje_fila + 1][self.personaje_columna] == 6 and self.mapa[self.personaje_fila + 2][self.personaje_columna] == 2:
            #donde estaba el personaje pone un piso
            self.mapa[self.personaje_fila][self.personaje_columna] = 4
            #donde estaba la caja_meta cambia a personaje_meta
            self.mapa[self.personaje_fila + 1][self.personaje_columna] = 5
            #donde estaba la meta cambia a caja _meta
            self.mapa[self.personaje_fila + 2][self.personaje_columna] = 6
            #se actualiza la posicion del personaje
            self.personaje_fila+=1
    #movimiento personaje_meta,caja_meta,meta
        #se evalua si abajo del personaje_meta hay una caja_meta y si delante hay una meta
        elif self.mapa[self.personaje_fila][self.personaje_columna] == 5 and self.mapa[self.personaje_fila + 1][self.personaje_columna] == 6 and self.mapa[self.personaje_fila + 2][self.personaje_columna] == 2:
              #donde estaba el personaje_meta se actualiza a meta
              self.mapa[self.personaje_fila][self.personaje_columna] = 2
               #donde estaba la caja_meta se actualiza a personaje_meta
              self.mapa[self.personaje_fila + 1][self.personaje_columna] = 5
              #donde  estaba la meta se convierte a caja_meta
              self.mapa[self.personaje_fila + 2][self.personaje_columna] = 6
              #se actualiza la posicion del personaje
              self.personaje_fila+=1



  
    def limpiar_pantalla(self):
      os.system('cls' if os.name == 'nt' else 'clear')
    def jugar(self):
        while True:
          #llamar la funcion de limpiar de pantalla
          self.limpiar_pantalla()
        # Imprime el mapa
          self.imprimirMapa()
           # Pide al usuario el movimiento
          movimiento = input("Selecciona el movimiento: ")
           # Moverse a la derecha
          if movimiento == 'd':
            self.derecha()
           # Moverse a la izquierda
          elif movimiento == 'a':
            self.izquierda()
          # Moverse hacia arriba
          elif movimiento == 'w':
            self.arriba()
          elif movimiento == 's':
            self.abajo()
soko = Soko()
soko.jugar()
